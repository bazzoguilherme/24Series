[Class] Midia:
    - troca do tipo de dado de "Genero" : passou de String para ArrayList<String>
    - adicionado "nroEpisodios" (antes em Serie)
        - Adiconado "ArrayList<Integer> nroEpisodios" no construtor
    - troca no contrutor para suportar receber ArrayList<String> para genero
    - troca do retorno do método getGenero para um retorno ArrayList<String>
    - [ADICIONADO] "toString()" (public)
    - [ADICIONADO] "toArq()" (public) retorna uma String formatada para gravar no arquivo
    - [ADICIONADO] "listaStringtoString" / "listaIntegertoString (private)(retorno String) recebem uma lista de String e Integer 
        respectivamente e retornam uma string desses elementos que será utilizada para gravar no arquivo

[Class] Registro
    - troca no construtor para suportar receber ArrayList<String> para genero

[Class] Serie
    - "quantidadeTotalEpisodios" (public): Método foi inserido com o intuito de testar funcionalidades, porém 
        será removida e tal processo será feito em outra classe.
    - troca no construtor para suportar receber ArrayList<String> para genero
    - remoção de "ArrayList<Integer> nroEpisodios" do contrutor

[Class] Filme
    - troca no contrutor para suportar receber ArrayList<String> para genero

[Class] Banco 
    - "adicionarSerie" e "adicionarFilme" tornadas privadas e criado novo método "adicionarMidia" (public) mais geral;
        Neste método é feita a verificação do tipo de midia que está sendo adicionada, e o adiciona com os metodos privados.
    - [MODIFICADO] "adicionaMidia" recebe um identificador (char) para saber qual o tipo de Midia(Serie/Filme) estamos adicionando no banco, 
        uma vez que pedimos pare inserir apenas Midias e guardamos em dois Hashtable separados.

[Class] ProcessaArquivo
    - "novaMidiaCatalogo" (private): adiciona nova midia no catalogo.
    - "createObjectMidia" (private): cria um objeto do tipo Midia (Serie/Filme) a partir da linha lida do arquivo CSV.
    - "criaListaGeneros"/"criaListaEpisodios" (private): cria ArrayList (Generos(String)/Episodios(Integer)) a partir de uma String.
    - [ADICIONADO] "valuesHashtable" (private) retorna os "value"s da hashtable dada em forma de ArrayList<Midia>

[Class] Colecao
    - "SetNome" : alterado para "setNome" para manter padrão de nomes de métodos.

[Class] ProcessadorEstatistico:
	- [MODIFICADO]"calculaEpisodiosRestantes" (public): recebe uma Serie 's' e retorna a (int)quantidade de episodios restantes para completar a Serie 's'. No projeto original esse metodo recebia uma lista de Serie's e retornava uma lista de "episodios restantes".
	- [ADICIONADO] calculaTotalEpisodiosRestantes(public): recebe uma lista de Series e retorna uma lista de Integers, contendo a quantidade de episodios restantes para finalizar cada serie da lista de entrada, na mesma ordem.

[Class] FiltroGeral
    - [MODIFICADO] "buscaPorNome" recebe o catalogo, assim o programa consegue analisar as Midias que foram estão armazenadas no catalogo
    - [ADICIONADO] "verificaGeneroEmListaGeneros" (private): verifica se há um genero passado como argumento em uma lista de generos da Midia, case haja, retorna 'true'
    - [ADICIONADO] "filtraPorGenero" (public) Overload de método para aceitar receber uma lista de generos para analisar 
        - Considerado necessário já que "calculaModa" retorna uma lista dos generos mais "vistos"
    - [ADICIONADO] "uniaoArrayMidia" (private) realiza a união entre dois arrays (não adicionando repetidos)

[Class] FiltroRepositorio
    - métodos dessa classe retornam ArrayList<Registro>

[Class] UserInterface:
    - [ADICIONADO] Overload de metodo "selecionaOpcao" (opcoes, pedido), assim pode mandar uma mensagem ao pedir opção (int)

[Class] GerenciadorAcoesCliente
    - [ADICIONADO] "selecionaParNomesBatalha" (private) retorna uma lista contendo apenas os nomes das midias (2) que 
        estão sendo analisadas no momento. 
        - Feito assim para não realizar o "toString()" da Midia e imprimir muitas informações na tela, assim só exibe o nome da Midia ao usuário
    - [MODIFICADO] "batalha" devolve o Registro vencedor para ser exibido na tela em UserInterface
    
Testes:
    - Foram adicionado no pacote de "Tests" classes que contém constantes.
        Fazendo isso, não é necessário adicionar constantes em todos os testes, nem colocar falores "soltos" dentro do código.